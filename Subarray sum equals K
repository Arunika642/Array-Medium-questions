Brute Force: O(N^2)

class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        int count1=0;
        for(int i=0; i<nums.size();i++)
        {
            int sum=0;
            for(int j=i; j<nums.size();j++)
            {
                sum+=nums[j];
                if(sum==k)
                {
                    count1++;
                }
            }
        }
        return count1;
    }
};


Optimal solution
class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        map<int,int> preSumMap;
        preSumMap[0]=1;
        int sum=0,count=0;
        for(int i=0; i<nums.size();i++)
        {
            sum+=nums[i];
            int rem = sum-k;
            count+= preSumMap[rem];
            preSumMap[sum]++;
        }
        return count;
    }
};
